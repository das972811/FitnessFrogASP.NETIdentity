// <auto-generated />
using System;
using FitnessFrogDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessFrogDb.Migrations
{
    [DbContext(typeof(FitnessFrogContext))]
    [Migration("20240208041748_UpdatedEntry")]
    partial class UpdatedEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FitnessFrogDb.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Activity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basketball"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Biking"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hiking"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kayaking"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pokemon Go"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Running"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Skiing"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Walking"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Weight Lifting"
                        });
                });

            modelBuilder.Entity("FitnessFrogDb.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Duration")
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)");

                    b.Property<bool>("Exclude")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Intensity")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Entry", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityId = 2,
                            Date = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 12.2m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 2,
                            ActivityId = 3,
                            Date = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 123.0m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 3,
                            ActivityId = 2,
                            Date = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 32.2m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 4,
                            ActivityId = 9,
                            Date = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 13.6m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 5,
                            ActivityId = 2,
                            Date = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 10.2m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 6,
                            ActivityId = 2,
                            Date = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 5.2m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 7,
                            ActivityId = 9,
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 22.2m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 8,
                            ActivityId = 2,
                            Date = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 17.0m,
                            Exclude = false,
                            Intensity = 2
                        },
                        new
                        {
                            Id = 9,
                            ActivityId = 5,
                            Date = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 7.2m,
                            Exclude = false,
                            Intensity = 2
                        });
                });

            modelBuilder.Entity("FitnessFrogDb.Models.Entry", b =>
                {
                    b.HasOne("FitnessFrogDb.Models.Activity", "Activity")
                        .WithMany("Entries")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("FitnessFrogDb.Models.Activity", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
